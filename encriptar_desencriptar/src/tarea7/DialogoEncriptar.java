package tarea7;

import java.io.*;
import java.security.*;
import javax.crypto.*;
import javax.swing.JOptionPane;

/**
 *
 * @author AnaIglesias
 */
public class DialogoEncriptar extends javax.swing.JDialog {
    
    FondoPantalla fondo = new FondoPantalla();
    principal p = new principal();
    String fichero = "fichero.cifrado";
    boolean encriptado = false;
    SecretKey clave;
    
    public DialogoEncriptar(java.awt.Frame parent, boolean modal, SecretKey clave) {
        super(parent, modal);
        this.setContentPane(fondo);
        initComponents();
        this.setLocationRelativeTo(null);
        this.clave = clave;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea_texto_in = new javax.swing.JTextArea();
        jButton_encriptar = new javax.swing.JButton();
        jButton_des = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea_texto_out = new javax.swing.JTextArea();
        jButton_salir = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea_texto_encrip = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Texto a encriptar", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Monospaced", 1, 16))); // NOI18N

        jTextArea_texto_in.setColumns(20);
        jTextArea_texto_in.setFont(new java.awt.Font("Monospaced", 0, 12)); // NOI18N
        jTextArea_texto_in.setRows(5);
        jTextArea_texto_in.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextArea_texto_inKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(jTextArea_texto_in);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 322, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 123, Short.MAX_VALUE)
        );

        jButton_encriptar.setFont(new java.awt.Font("Monospaced", 1, 16)); // NOI18N
        jButton_encriptar.setText("Encriptar");
        jButton_encriptar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton_encriptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_encriptarActionPerformed(evt);
            }
        });

        jButton_des.setFont(new java.awt.Font("Monospaced", 1, 16)); // NOI18N
        jButton_des.setText("Desencriptar");
        jButton_des.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton_des.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_desActionPerformed(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Texto desencriptado", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Monospaced", 1, 16))); // NOI18N

        jTextArea_texto_out.setEditable(false);
        jTextArea_texto_out.setColumns(20);
        jTextArea_texto_out.setRows(5);
        jScrollPane2.setViewportView(jTextArea_texto_out);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 680, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 133, Short.MAX_VALUE)
        );

        jButton_salir.setFont(new java.awt.Font("Monospaced", 1, 16)); // NOI18N
        jButton_salir.setText("Salir");
        jButton_salir.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton_salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_salirActionPerformed(evt);
            }
        });

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Texto encriptado", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Monospaced", 1, 16))); // NOI18N
        jPanel3.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N

        jTextArea_texto_encrip.setEditable(false);
        jTextArea_texto_encrip.setColumns(20);
        jTextArea_texto_encrip.setFont(new java.awt.Font("Monospaced", 0, 12)); // NOI18N
        jTextArea_texto_encrip.setRows(5);
        jScrollPane3.setViewportView(jTextArea_texto_encrip);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 328, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 123, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton_salir)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(169, 169, 169)
                                    .addComponent(jButton_encriptar, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(18, 18, 18)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(31, 31, 31)
                                    .addComponent(jButton_des))))))
                .addGap(27, 27, 27))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(71, 71, 71)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jButton_salir)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton_encriptar)
                    .addComponent(jButton_des))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton_salirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_salirActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jButton_salirActionPerformed

    private void jButton_encriptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_encriptarActionPerformed
        if (jTextArea_texto_in.getText().isEmpty()){
           JOptionPane.showMessageDialog(null, "Debes introducir un texto", "ERROR", JOptionPane.ERROR_MESSAGE);
        }else{
           cifradoDeTexto(jTextArea_texto_in.getText(),clave, fichero); 
           encriptado = true;
           
        }
    }//GEN-LAST:event_jButton_encriptarActionPerformed

    private void jButton_desActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_desActionPerformed
        if (encriptado){
            descifradoDeTexto(clave,fichero);
        }else{
            JOptionPane.showMessageDialog(null, "No hay fichero encriptado ", "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton_desActionPerformed

    private void jTextArea_texto_inKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextArea_texto_inKeyPressed
        //limpiamos los JtextArea cuando se introduce un nuevo texto
        jTextArea_texto_encrip.setText("");
        jTextArea_texto_out.setText("");
    }//GEN-LAST:event_jTextArea_texto_inKeyPressed
    //Método para el cifrado del texto
    private void cifradoDeTexto(String texto, SecretKey clave, String fichero) {
        FileOutputStream fos = null; //fichero de salida
        byte[] cifrado;
        
        try {
            
            //Se Crea el objeto Cipher para cifrar, utilizando el algoritmo AES
            Cipher aes= Cipher.getInstance("Rijndael/ECB/PKCS5Padding");
            
            //Se inicializa el cifrador en modo cifrado
            aes.init(Cipher.ENCRYPT_MODE, clave);
            
            fos = new FileOutputStream(fichero);
            // Ciframos el texto
            cifrado = aes.update(jTextArea_texto_in.getText().getBytes());
            fos.write(cifrado); //Graba el texto cifrado en fichero
            
            cifrado = aes.doFinal(); //Completa el cifrado
            
            fos.write(cifrado); //Graba el final del texto cifrado
            
            //Se cierra el fichero
            fos.close();
            //abrimos el fichero para leerlo cifrado
            FileInputStream fis = new FileInputStream(fichero);
           // byte[] encriptado;
            byte[] buffer = new byte[1000];
            //lee el fichero de 1k en 1k 
            int bytesLeidos = fis.read(buffer, 0, 1000);
        
            // Mostramos el contenido del fichero cifrado
            while (bytesLeidos != -1) {//mientras no se llegue al final del fichero

                jTextArea_texto_encrip.setText(new String(buffer, "UTF-8"));
                bytesLeidos = fis.read(buffer, 0, 1000);
            }
            jTextArea_texto_encrip.setText(new String(buffer, "UTF-8")); 
          
            //cerramos el fichero
            fis.close();
           
            
        } catch (NoSuchAlgorithmException ex) {
            ex.printStackTrace();
        } catch (NoSuchPaddingException ex) {
            ex.printStackTrace();
        } catch (InvalidKeyException ex) {
            ex.printStackTrace();
        } catch (FileNotFoundException ex) {
            ex.printStackTrace();
        } catch (IOException ex) {
            ex.printStackTrace();
        } catch (IllegalBlockSizeException ex) {
            ex.printStackTrace();
        } catch (BadPaddingException ex) {
            ex.printStackTrace();
        }
    }
    //Método que desencripta el fichero codificado para su visualización
    private void descifradoDeTexto(SecretKey clave, String fichero){
        FileInputStream fis = null;
        jTextArea_texto_out.setText("");
        try {
            //abrimos el fichero para lectura
            fis = new FileInputStream(fichero);
            Cipher aes = Cipher.getInstance("Rijndael/ECB/PKCS5Padding");
            aes.init(Cipher.DECRYPT_MODE, clave);
            byte[] desencriptado;
            //lee el fichero de 1k en 1k
            byte[] buffer = new byte[1000];
            int bytesLeidos = fis.read(buffer, 0, 1000);
            //mientras no se llegue al final del fichero
            while (bytesLeidos != -1) {
                //desciframos el contenido del fichero
                desencriptado = aes.update(buffer, 0, bytesLeidos);
                // Mostramos el contenido descifrado
                jTextArea_texto_out.append(new String(desencriptado, "UTF-8"));
                bytesLeidos = fis.read(buffer, 0, 1000);
                
            }   
            desencriptado = aes.doFinal(); //Completa el descifrado
            jTextArea_texto_out.append(new String(desencriptado, "UTF-8"));
            // Cerramos el archivo
            fis.close();
            
        } catch (FileNotFoundException ex) {
            ex.printStackTrace();
        } catch (NoSuchAlgorithmException ex) {
             ex.printStackTrace();
        } catch (NoSuchPaddingException ex) {
             ex.printStackTrace();
        } catch (InvalidKeyException ex) {
             ex.printStackTrace();
        } catch (IOException ex) {
             ex.printStackTrace();
        } catch (IllegalBlockSizeException ex) {
             ex.printStackTrace();
        } catch (BadPaddingException ex) {
             ex.printStackTrace();
        } finally {
            try {
                fis.close();
            } catch (IOException ex) {
                 ex.printStackTrace();
            }
        }
        
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_des;
    private javax.swing.JButton jButton_encriptar;
    private javax.swing.JButton jButton_salir;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea jTextArea_texto_encrip;
    private javax.swing.JTextArea jTextArea_texto_in;
    private javax.swing.JTextArea jTextArea_texto_out;
    // End of variables declaration//GEN-END:variables

    
}
